/**
 * TariffInfo Component
 * Displays tariff plans with payment placeholder
 */

import React, { useState, useEffect } from 'react';
import { useTariffs } from '../../hooks/useApi';
import { TariffPlan } from '../../types/api';
import { formatDate } from '../../utils/helpers';
import './TariffInfo.css';

interface TariffCardProps {
  plan: TariffPlan;
  isPopular?: boolean;
  onSelectPlan: (planId: string) => void;
  paymentAvailable: boolean;
}

function TariffCard({ plan, isPopular, onSelectPlan, paymentAvailable }: TariffCardProps) {
  const handleSelectPlan = () => {
    if (plan.isFree) {
      onSelectPlan(plan.id);
    } else {
      // Show payment placeholder
      alert('–û–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–∑–∂–µ. –ü–æ–∫–∞ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ.');
    }
  };

  const formatPrice = (price: number | string) => {
    if (typeof price === 'string') {
      return price;
    }
    return price === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `${price} ‚ÇΩ`;
  };

  return (
    <div className={`tariff-card ${isPopular ? 'popular' : ''} ${plan.isFree ? 'free' : ''}`}>
      {isPopular && (
        <div className="popular-badge">
          üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
        </div>
      )}
      
      <div className="tariff-header">
        <h3 className="tariff-name">{plan.name}</h3>
        <div className="tariff-price">
          <span className="price">{formatPrice(plan.price)}</span>
          {!plan.isFree && (
            <span className="period">/{plan.period}</span>
          )}
        </div>
        <p className="tariff-description">{plan.description}</p>
      </div>

      <div className="tariff-features">
        <h4>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</h4>
        <ul className="features-list">
          {plan.features.map((feature, index) => (
            <li key={index} className="feature-item">
              <span className="feature-icon">‚úì</span>
              {feature}
            </li>
          ))}
        </ul>
      </div>

      {plan.limitations && plan.limitations.length > 0 && (
        <div className="tariff-limitations">
          <h4>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</h4>
          <ul className="limitations-list">
            {plan.limitations.map((limitation, index) => (
              <li key={index} className="limitation-item">
                <span className="limitation-icon">‚ö†</span>
                {limitation}
              </li>
            ))}
          </ul>
        </div>
      )}

      <div className="tariff-footer">
        <button
          className={`select-plan-btn ${plan.isFree ? 'free-btn' : 'premium-btn'}`}
          onClick={handleSelectPlan}
          disabled={!paymentAvailable && !plan.isFree}
        >
          {plan.isFree ? '–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ' : '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω'}
        </button>
        
        {!plan.isFree && !paymentAvailable && (
          <p className="payment-notice">
            –û–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–∑–∂–µ
          </p>
        )}
      </div>
    </div>
  );
}

interface ComparisonTableProps {
  plans: TariffPlan[];
  features: string[];
  comparison: Record<string, Record<string, boolean | string>>;
}

function ComparisonTable({ plans, features, comparison }: ComparisonTableProps) {
  return (
    <div className="comparison-table-container">
      <h3>–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤</h3>
      <div className="comparison-table">
        <table>
          <thead>
            <tr>
              <th className="feature-column">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</th>
              {plans.map(plan => (
                <th key={plan.id} className={`plan-column ${plan.isPopular ? 'popular' : ''}`}>
                  <div className="plan-header">
                    <div className="plan-name">{plan.name}</div>
                    <div className="plan-price">
                      {typeof plan.price === 'string' ? plan.price : 
                       plan.price === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `${plan.price} ‚ÇΩ`}
                    </div>
                  </div>
                </th>
              ))}
            </tr>
          </thead>
          <tbody>
            {features.map(feature => (
              <tr key={feature}>
                <td className="feature-name">{feature}</td>
                {plans.map(plan => (
                  <td key={`${plan.id}-${feature}`} className="feature-value">
                    {comparison[plan.id][feature] === true ? (
                      <span className="check-mark">‚úì</span>
                    ) : comparison[plan.id][feature] === false ? (
                      <span className="cross-mark">‚úó</span>
                    ) : (
                      <span className="text-value">{comparison[plan.id][feature]}</span>
                    )}
                  </td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
}

export function TariffInfo() {
  const { data: tariffsData, loading, error, refetch } = useTariffs();
  const [showComparison, setShowComparison] = useState(false);
  const [selectedPlan, setSelectedPlan] = useState<string | null>(null);

  const handleSelectPlan = (planId: string) => {
    setSelectedPlan(planId);
    
    // For now, just show a message since payment is not available
    if (planId === 'free') {
      alert('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.');
    } else {
      alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å! –ü–ª–∞—Ç–Ω—ã–µ –ø–ª–∞–Ω—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ü–æ–∫–∞ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ.');
    }
  };

  const toggleComparison = () => {
    setShowComparison(!showComparison);
  };

  if (loading) {
    return (
      <div className="tariff-info">
        <div className="loading-container">
          <div className="loading-spinner"></div>
          <h2>–ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞—Ä–∏—Ñ—ã...</h2>
          <p>–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–ª–∞–Ω–∞—Ö</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="tariff-info">
        <div className="error-container">
          <div className="error-icon">‚ö†Ô∏è</div>
          <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤</h2>
          <p className="error-message">{error}</p>
          <div className="error-actions">
            <button onClick={refetch} className="btn btn-primary">
              üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        </div>
      </div>
    );
  }

  if (!tariffsData) {
    return (
      <div className="tariff-info">
        <div className="no-data-container">
          <div className="no-data-icon">üìã</div>
          <h2>–¢–∞—Ä–∏—Ñ—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</h2>
          <p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–∞—Ö –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–∑–∂–µ</p>
        </div>
      </div>
    );
  }

  const { currentPlans, paymentStatus } = tariffsData;

  return (
    <div className="tariff-info">
      {/* Header */}
      <div className="tariff-header-section">
        <div className="header-content">
          <h1 className="page-title">–¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã</h1>
          <p className="page-subtitle">
            –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
          </p>
          
          {!paymentStatus.available && (
            <div className="payment-notice-banner">
              <div className="notice-icon">üöß</div>
              <div className="notice-content">
                <h3>–í—Ä–µ–º–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!</h3>
                <p>{paymentStatus.message}</p>
                {paymentStatus.expectedDate && (
                  <p className="expected-date">
                    –û–∂–∏–¥–∞–µ–º–∞—è –¥–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞—Ç–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤: {formatDate(paymentStatus.expectedDate)}
                  </p>
                )}
              </div>
            </div>
          )}
        </div>
      </div>

      {/* Tariff Cards */}
      <div className="tariff-cards-section">
        <div className="tariff-cards-container">
          {currentPlans.map(plan => (
            <TariffCard
              key={plan.id}
              plan={plan}
              isPopular={plan.isPopular}
              onSelectPlan={handleSelectPlan}
              paymentAvailable={paymentStatus.available}
            />
          ))}
        </div>
      </div>

      {/* Comparison Toggle */}
      <div className="comparison-section">
        <div className="comparison-toggle">
          <button
            className="comparison-btn"
            onClick={toggleComparison}
          >
            {showComparison ? '–°–∫—Ä—ã—Ç—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ' : '–°—Ä–∞–≤–Ω–∏—Ç—å –ø–ª–∞–Ω—ã'}
          </button>
        </div>

        {showComparison && (
          <ComparisonTable
            plans={currentPlans}
            features={[
              '–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞–º',
              '–ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã',
              '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É–¥–∞–ª–µ–Ω–∏—é',
              '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
              '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤',
              '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
              'API –¥–æ—Å—Ç—É–ø',
              '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä'
            ]}
            comparison={{
              free: {
                '–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞–º': '5 –±–æ—Ç–æ–≤',
                '–ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã': '3 –≤ –¥–µ–Ω—å',
                '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É–¥–∞–ª–µ–Ω–∏—é': true,
                '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞': 'Email',
                '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤': false,
                '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è': false,
                'API –¥–æ—Å—Ç—É–ø': false,
                '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä': false
              },
              basic: {
                '–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞–º': '5 –±–æ—Ç–æ–≤',
                '–ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã': '50 –≤ –º–µ—Å—è—Ü',
                '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É–¥–∞–ª–µ–Ω–∏—é': true,
                '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞': '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è',
                '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤': true,
                '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è': true,
                'API –¥–æ—Å—Ç—É–ø': false,
                '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä': false
              },
              premium: {
                '–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞–º': '5 –±–æ—Ç–æ–≤',
                '–ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã': '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ',
                '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É–¥–∞–ª–µ–Ω–∏—é': true,
                '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞': '24/7',
                '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤': true,
                '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è': true,
                'API –¥–æ—Å—Ç—É–ø': true,
                '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä': true
              },
              enterprise: {
                '–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞–º': '5 –±–æ—Ç–æ–≤',
                '–ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã': '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ',
                '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É–¥–∞–ª–µ–Ω–∏—é': true,
                '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞': '–í—ã–¥–µ–ª–µ–Ω–Ω–∞—è',
                '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤': true,
                '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è': true,
                'API –¥–æ—Å—Ç—É–ø': true,
                '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä': true
              }
            }}
          />
        )}
      </div>

      {/* FAQ Section */}
      <div className="faq-section">
        <h3>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h3>
        <div className="faq-list">
          <div className="faq-item">
            <h4>–ö–æ–≥–¥–∞ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–ª–∞—Ç–Ω—ã–µ –ø–ª–∞–Ω—ã?</h4>
            <p>
              –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º. –û–∂–∏–¥–∞–µ–º–∞—è –¥–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞ - 
              {paymentStatus.expectedDate ? formatDate(paymentStatus.expectedDate) : '–≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è'}.
              –î–æ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ.
            </p>
          </div>
          
          <div className="faq-item">
            <h4>–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –±—É–¥—É—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è?</h4>
            <p>
              –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã: –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã, 
              –ÆKassa, –°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω, PayPal –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã.
            </p>
          </div>
          
          <div className="faq-item">
            <h4>–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–ª–∞–Ω –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏?</h4>
            <p>
              –î–∞, –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –±–æ–ª–µ–µ 
              –¥–æ—Ä–æ–≥–æ–π –ø–ª–∞–Ω –¥–æ–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –æ—Å—Ç–∞–≤—à–µ–º—É—Å—è –ø–µ—Ä–∏–æ–¥—É.
            </p>
          </div>
          
          <div className="faq-item">
            <h4>–ï—Å—Ç—å –ª–∏ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤?</h4>
            <p>
              –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º 14-–¥–Ω–µ–≤–Ω—É—é –≥–∞—Ä–∞–Ω—Ç–∏—é –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤. 
              –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å –≤–∞–º –Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç, –º—ã –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.
            </p>
          </div>
        </div>
      </div>

      {/* Contact Section */}
      <div className="contact-section">
        <h3>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –≤—ã–±–æ—Ä–æ–º?</h3>
        <p>
          –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏, –∏ –º—ã –ø–æ–º–æ–∂–µ–º –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω
        </p>
        <div className="contact-methods">
          <div className="contact-method">
            <span className="contact-icon">üìß</span>
            <span>support@privacy-removal.com</span>
          </div>
          <div className="contact-method">
            <span className="contact-icon">üí¨</span>
            <span>Telegram: @privacy_support</span>
          </div>
        </div>
      </div>
    </div>
  );
}